/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("jlox.java-application-conventions")
    id("java")
}

repositories { mavenCentral() }

dependencies {
    testImplementation("junit:junit:4.13.2")
    implementation("org.apache.commons:commons-text")
}

application {
    // Define the main class for the application.
    mainClass.set("jlox.interpreter.Main")
}

tasks {
    val fatJar =
            register<Jar>("fatJar") {
                dependsOn.addAll(listOf("compileJava", "processResources"))
                archiveClassifier.set("standalone")
                duplicatesStrategy = DuplicatesStrategy.EXCLUDE
                manifest { attributes(mapOf("Main-Class" to application.mainClass)) }
                val sourcesMain = sourceSets.main.get()
                val contents =
                        configurations.runtimeClasspath.get().map {
                            if (it.isDirectory) it else zipTree(it)
                        } + sourcesMain.output
                from(contents)
            }
    build { dependsOn(fatJar) }
}
